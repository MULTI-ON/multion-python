# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import pydantic_v1
from ..core.unchecked_base_model import UncheckedBaseModel
from .session_stream_chunk_final_event_data import SessionStreamChunkFinalEventData


class SessionStreamChunkFinalEvent(UncheckedBaseModel):
    data: SessionStreamChunkFinalEventData = pydantic_v1.Field()
    """
    The final delta object for the session.
    """

    session_id: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The unique identifier for the session.
    """

    screenshot: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    image url of the screenshot taken during the session.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
